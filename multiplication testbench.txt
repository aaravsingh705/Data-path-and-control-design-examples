`timescale 1ns / 1ps

module MUL_test;

    reg [15:0] data_in;
    reg clk, start;
    wire done;
    wire eqz;

    // Control signals
    wire LdA, LdB, LdP, clrP, decB;

    // Instantiate Data Path and Controller
    MUL_datapath DP (
        .eqz(eqz),
        .LdA(LdA),
        .LdB(LdB),
        .LdP(LdP),
        .clrP(clrP),
        .decB(decB),
        .data_in(data_in),
        .clk(clk)
    );

    controller CON (
        .LdA(LdA),
        .LdB(LdB),
        .LdP(LdP),
        .clrP(clrP),
        .decB(decB),
        .done(done),
        .clk(clk),
        .eqz(eqz),
        .start(start)
    );

    // Clock generation
    initial
    begin
        clk = 1'b0;
        forever #5 clk = ~clk;
    end

    // Stimulus
    initial
    begin
        start = 1'b0;
        #3  start = 1'b1;          // Begin multiplication
        #17 data_in = 16'd17;      // A = 17
        #10 data_in = 16'd5;       // B = 5
        #500 $finish;
    end

    // Monitor output
    initial
    begin
        $monitor($time, " | Product = %d | Done = %b", DP.Y, done);
    end

endmodule
